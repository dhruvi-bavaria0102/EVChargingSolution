@model EVCharging.Data.Service

@{
    ViewBag.Title = "Edit Selected Service";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ServiceID)

        <div class="form-group">
<<<<<<< HEAD
            @Html.LabelFor(model => model.ServiceName, "Service Name", htmlAttributes: new { @class = "control-label col-md-2" })
=======
            @Html.LabelFor(model => model.ServiceName,"Service Name", htmlAttributes: new { @class = "control-label col-md-2" })
>>>>>>> 8bb43e7c562d901dad9a6fcb294a4442457e1bc5
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServiceName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
<<<<<<< HEAD
            @Html.LabelFor(model => model.ServiceDescription, "Service Description", htmlAttributes: new { @class = "control-label col-md-2" })
=======
            @Html.LabelFor(model => model.ServiceDescription,"Service Description", htmlAttributes: new { @class = "control-label col-md-2" })
>>>>>>> 8bb43e7c562d901dad9a6fcb294a4442457e1bc5
            <div class="col-md-10">
                @Html.EditorFor(model => model.ServiceDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServiceDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Accepted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Accepted)
                    @Html.ValidationMessageFor(model => model.Accepted, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ServiceStatus, "Service Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ServiceStatus,
                           new SelectList(Enum.GetValues(typeof(ServiceStatus))),
                                new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ServiceStatus, "", new { @class = "text-danger" })


            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
