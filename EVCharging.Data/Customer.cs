//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EVCharging.Data
{
    using System;
    using System.Collections.Generic;
    
    public partial class Customer
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Customer()
        {
            this.PhoneNumbers = new HashSet<PhoneNumber>();
            this.Vehicles = new HashSet<Vehicle>();
        }
    
        public int ID { get; set; }
<<<<<<< HEAD

        [Required(ErrorMessage = "Enter FirstName!")]
        [StringLength(50)]
        [Display(Name = "First Name")]
        public string FirstName { get; set; }

        [Required(ErrorMessage = "Enter LastName!")]
        [MaxLength(50), MinLength(2)]
        [Display(Name = "Last Name")]
=======
        public string FirstName { get; set; }
>>>>>>> 8bb43e7c562d901dad9a6fcb294a4442457e1bc5
        public string LastName { get; set; }
        public Nullable<int> BusinessUnitID { get; set; }
<<<<<<< HEAD

        [Required(ErrorMessage = "Email required!")]

        [Display(Name = "Email")]
        [RegularExpression(@"^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}" + @"\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\" + @".)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$", ErrorMessage = "Invalid Email")]
        public string EmailAddress { get; set; }
        [Required(ErrorMessage = "StreetAddress  required!")]

        [Display(Name = "Street Address ")]
        public string streetAddress { get; set; }
        [Required(ErrorMessage = "PostalCode required!")]

        [Display(Name = "Postal Code")]
        public string PostalCode { get; set; }
        [Required(ErrorMessage = "City required!")]

        [Display(Name = "City")]
        public string City { get; set; }
        [Required(ErrorMessage = "Country required!")]

        [Display(Name = "Country")]
        public string Country { get; set; }
        [Required(ErrorMessage = "InvoiceStreetAddress  required!")]

        [Display(Name = "Invoice Street Address ")]
        public string InvoiceStreetAddress { get; set; }
        [Required(ErrorMessage = "InvoicePostalCode required!")]

        [Display(Name = "Invoice Postal Code")]
        public string InvoicePostalCode { get; set; }
        [Required(ErrorMessage = "InvoiceCity required!")]

        [Display(Name = "Invoice City")]
        public string InvoiceCity { get; set; }
        [Required(ErrorMessage = "InvoiceCountry required!")]

        [Display(Name = "Invoice Country ")]
        public string InvoiceCountry { get; set; }
        [Required(ErrorMessage = "Site  required!")]

        [Display(Name = "Site ")]
=======
        public string EmailAddress { get; set; }
        public string streetAddress { get; set; }
        public string PostalCode { get; set; }
        public string City { get; set; }
        public string Country { get; set; }
        public string InvoiceStreetAddress { get; set; }
        public string InvoicePostalCode { get; set; }
        public string InvoiceCity { get; set; }
        public string InvoiceCountry { get; set; }
>>>>>>> 8bb43e7c562d901dad9a6fcb294a4442457e1bc5
        public string Site { get; set; }
        public string Telephone { get; set; }
        public string RoleId { get; set; }
        public Nullable<System.DateTime> InsertDate { get; set; }
        public Nullable<System.DateTime> UpdateDate { get; set; }
        public Nullable<System.DateTime> DeleteDate { get; set; }
        public Nullable<bool> IsDeleted { get; set; }
        public string Password { get; set; }
        public string resetPasswordCode { get; set; }
        public Nullable<bool> IsEmailverify { get; set; }
        public string ConfirmPassword { get; set; }
    
        public virtual BusinessUnit BusinessUnit { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PhoneNumber> PhoneNumbers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Vehicle> Vehicles { get; set; }
<<<<<<< HEAD


        [Required(ErrorMessage = "Enter RePassword!")]
        [Display(Name = "Confirm Password")]
        [DataType(DataType.Password)]
        [Compare("Password", ErrorMessage = "Password is not identical")]
        public string ConfirmPassword { get; set; }
=======
>>>>>>> 8bb43e7c562d901dad9a6fcb294a4442457e1bc5
    }
}
